<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.Cors</name>
  </assembly>
  <members>
    <member name="T:System.Web.Http.CorsHttpConfigurationExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" />의 CORS 관련 확장 메서드입니다.</summary>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.EnableCors(System.Web.Http.HttpConfiguration)">
      <summary>CORS에 대한 지원을 사용하도록 설정합니다.</summary>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.EnableCors(System.Web.Http.HttpConfiguration,System.Web.Http.Cors.ICorsPolicyProvider)">
      <summary>CORS에 대한 지원을 사용하도록 설정합니다.</summary>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <param name="defaultPolicyProvider">기본 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration</exception>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.GetCorsEngine(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" />에서 <see cref="T:System.Web.Cors.ICorsEngine" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Cors.ICorsEngine" />입니다.</returns>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration</exception>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.GetCorsPolicyProviderFactory(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" />에서 <see cref="T:System.Web.Http.Cors.ICorsPolicyProviderFactory" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Http.Cors.ICorsPolicyProviderFactory" />입니다.</returns>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration</exception>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.SetCorsEngine(System.Web.Http.HttpConfiguration,System.Web.Cors.ICorsEngine)">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" />에서 <see cref="T:System.Web.Cors.ICorsEngine" />을 설정합니다.</summary>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <param name="corsEngine">
        <see cref="T:System.Web.Cors.ICorsEngine" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration 또는 corsEngine</exception>
    </member>
    <member name="M:System.Web.Http.CorsHttpConfigurationExtensions.SetCorsPolicyProviderFactory(System.Web.Http.HttpConfiguration,System.Web.Http.Cors.ICorsPolicyProviderFactory)">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" />에서 <see cref="T:System.Web.Http.Cors.ICorsPolicyProviderFactory" />을 설정합니다.</summary>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <param name="corsPolicyProviderFactory">
        <see cref="T:System.Web.Http.Cors.ICorsPolicyProviderFactory" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration 또는 corsPolicyProviderFactory</exception>
    </member>
    <member name="T:System.Web.Http.Cors.AttributeBasedPolicyProviderFactory">
      <summary>컨트롤러 또는 작업 특성에서 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />를 반환하는 <see cref="T:System.Web.Http.Cors.ICorsPolicyProviderFactory" />의 구현입니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.AttributeBasedPolicyProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Cors.AttributeBasedPolicyProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Web.Http.Cors.AttributeBasedPolicyProviderFactory.DefaultPolicyProvider">
      <summary>기본 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />를 가져오거나 설정합니다.</summary>
      <returns>기본 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />입니다.</returns>
    </member>
    <member name="M:System.Web.Http.Cors.AttributeBasedPolicyProviderFactory.GetCorsPolicyProvider(System.Net.Http.HttpRequestMessage)">
      <summary>요청에 대한 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />입니다.</returns>
      <param name="request">요청입니다.</param>
      <exception cref="T:System.ArgumentNullException">요청입니다.</exception>
    </member>
    <member name="T:System.Web.Http.Cors.CorsHttpRequestMessageExtensions">
      <summary>
        <see cref="T:System.Net.Http.HttpRequestMessage" />의 CORS 관련 확장 메서드입니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.CorsHttpRequestMessageExtensions.GetCorsRequestContext(System.Net.Http.HttpRequestMessage)">
      <summary>지정된 요청에 대한 <see cref="T:System.Web.Cors.CorsRequestContext" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Cors.CorsRequestContext" />입니다.</returns>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">요청입니다.</exception>
    </member>
    <member name="T:System.Web.Http.Cors.CorsHttpResponseMessageExtensions">
      <summary>
        <see cref="T:System.Net.Http.HttpResponseMessage" />의 CORS 관련 확장 메서드입니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.CorsHttpResponseMessageExtensions.WriteCorsHeaders(System.Net.Http.HttpResponseMessage,System.Web.Cors.CorsResult)">
      <summary>응답에 CORS 헤더를 씁니다.</summary>
      <param name="response">
        <see cref="T:System.Net.Http.HttpResponseMessage" />입니다.</param>
      <param name="corsResult">
        <see cref="T:System.Web.Cors.CorsResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">response 또는 corsResult</exception>
    </member>
    <member name="T:System.Web.Http.Cors.CorsMessageHandler">
      <summary>CORS 요청을 처리하기 위한 사용자 지정 <see cref="T:System.Net.Http.DelegatingHandler" />입니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.CorsMessageHandler.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Cors.CorsMessageHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="httpConfiguration">
        <see cref="T:System.Web.Http.HttpConfiguration" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">httpConfiguration</exception>
    </member>
    <member name="M:System.Web.Http.Cors.CorsMessageHandler.HandleCorsPreflightRequestAsync(System.Net.Http.HttpRequestMessage,System.Web.Cors.CorsRequestContext,System.Threading.CancellationToken)">
      <summary>CORS로 지정된 실행 전 요청을 처리합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />입니다.</returns>
      <param name="request">요청입니다.</param>
      <param name="corsRequestContext">CORS 요청 컨텍스트입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
      <exception cref="T:System.ArgumentNullException">request 또는 corsRequestContext</exception>
    </member>
    <member name="M:System.Web.Http.Cors.CorsMessageHandler.HandleCorsRequestAsync(System.Net.Http.HttpRequestMessage,System.Web.Cors.CorsRequestContext,System.Threading.CancellationToken)">
      <summary>실제 CORS 요청을 처리합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />입니다.</returns>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" />입니다.</param>
      <param name="corsRequestContext">
        <see cref="T:System.Web.Cors.CorsRequestContext" />입니다.</param>
      <param name="cancellationToken">
        <see cref="T:System.Threading.CancellationToken" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">request 또는 corsRequestContext</exception>
    </member>
    <member name="M:System.Web.Http.Cors.CorsMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>HTTP 요청을 내부 처리기에 보내고 비동기적인 작업으로 서버에 보냅니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />을 반환합니다.비동기 작업을 나타내는 작업 개체입니다.</returns>
      <param name="request">서버에 보낼 HTTP 요청 메시지입니다.</param>
      <param name="cancellationToken">작업을 취소할 취소 토큰입니다.</param>
    </member>
    <member name="T:System.Web.Http.Cors.DisableCorsAttribute">
      <summary>이 클래스는 CORS를 사용하지 않도록 설정하는 작업이나 컨트롤러에 적용할 수 있는 특성을 정의합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.DisableCorsAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Cors.DisableCorsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.DisableCorsAttribute.GetCorsPolicyAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>CORS 정책을 비동기적으로 가져옵니다.</summary>
      <returns>이 작업에 대해 새로 만들어진 작업입니다.</returns>
      <param name="request">요청입니다.</param>
      <param name="cancellationToken">이 작업에 할당된 취소 토큰입니다.</param>
    </member>
    <member name="T:System.Web.Http.Cors.EnableCorsAttribute">
      <summary>이 클래스는 CORS를 사용하도록 설정하는 작업이나 컨트롤러에 적용할 수 있는 특성을 정의합니다. 기본적으로 모든 원본, 메서드 및 헤더가 허용됩니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.EnableCorsAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Cors.EnableCorsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="origins">리소스에 액세스할 수 있는 쉼표로 구분된 원본 목록입니다. 모두 허용하려면 "*"를 사용합니다.</param>
      <param name="headers">리소스에서 지원되는 쉼표로 구분된 헤더 목록입니다. 모두 허용하려면 "*"를 사용합니다. 전혀 허용하지 않으려면 null 또는 빈 문자열을 사용합니다.</param>
      <param name="methods">리소스에서 지원되는 쉼표로 구분된 메서드 목록입니다. 모두 허용하려면 "*"를 사용합니다. 전혀 허용하지 않으려면 null 또는 빈 문자열을 사용합니다.   참고:   HTTP 동사는 대소문자를 구분합니다. "*"를 사용하지 않는 경우 GET, PUT, POST, DELETE 등을 지정할 때 대문자를 사용해야 합니다. 예:   var cors = new EnableCorsAttribute("http://localhost:1234", "*", "GET,PUT,POST,DELETE");  </param>
    </member>
    <member name="M:System.Web.Http.Cors.EnableCorsAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Cors.EnableCorsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="origins">리소스에 액세스할 수 있는 쉼표로 구분된 원본 목록입니다. 모두 허용하려면 "*"를 사용합니다.</param>
      <param name="headers">리소스에서 지원되는 쉼표로 구분된 헤더 목록입니다. 모두 허용하려면 "*"를 사용합니다. 전혀 허용하지 않으려면 null 또는 빈 문자열을 사용합니다.</param>
      <param name="methods">리소스에서 지원되는 쉼표로 구분된 메서드 목록입니다. 모두 허용하려면 "*"를 사용합니다. 전혀 허용하지 않으려면 null 또는 빈 문자열을 사용합니다.</param>
      <param name="exposedHeaders">리소스가 사용할 수 있으며 사용될 수 있는 쉼표로 구분된 헤더 목록입니다. 전혀 사용하지 않으려면 null 또는 빈 문자열을 사용합니다.</param>
    </member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.ExposedHeaders">
      <summary>리소스가 사용할 수 있으며 사용될 수 있는 헤더를 가져옵니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.EnableCorsAttribute.GetCorsPolicyAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.Headers">
      <summary>리소스에서 지원되는 헤더를 가져옵니다.</summary>
    </member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.Methods">
      <summary>리소스에서 지원되는 메서드를 가져옵니다.</summary>
    </member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.Origins">
      <summary>리소스에 액세스할 수 있는 원본을 가져옵니다.</summary>
    </member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.PreflightMaxAge">
      <summary>실행 전 요청 결과를 캐시할 수 있는 시간(초)을 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:System.Web.Http.Cors.EnableCorsAttribute.SupportsCredentials">
      <summary>리소스의 요청에서 사용자 자격 증명을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
    </member>
    <member name="T:System.Web.Http.Cors.ICorsPolicyProvider">
      <summary>
        <see cref="T:System.Web.Cors.CorsPolicy" />를 가져오기 위한 추상화를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.ICorsPolicyProvider.GetCorsPolicyAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Web.Cors.CorsPolicy" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Cors.CorsPolicy" />입니다.</returns>
      <param name="request">요청입니다.</param>
      <param name="cancellationToken">취소 토큰입니다.</param>
    </member>
    <member name="T:System.Web.Http.Cors.ICorsPolicyProviderFactory">
      <summary>
        <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />를 가져오기 위한 추상화를 제공합니다.</summary>
    </member>
    <member name="M:System.Web.Http.Cors.ICorsPolicyProviderFactory.GetCorsPolicyProvider(System.Net.Http.HttpRequestMessage)">
      <summary>요청에 대한 <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Web.Http.Cors.ICorsPolicyProvider" />입니다.</returns>
      <param name="request">요청입니다.</param>
    </member>
    <member name="T:System.Web.Http.Cors.Tracing.TraceCategories">
      <summary>기본 CORS 추적 구현에서 추적되는 범주 이름입니다.</summary>
    </member>
    <member name="F:System.Web.Http.Cors.Tracing.TraceCategories.CorsCategory">
      <summary>CORS 관련 이벤트의 추적 범주입니다.</summary>
    </member>
  </members>
</doc>